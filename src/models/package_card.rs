/*
 * Thunderstore API
 *
 * Schema is automatically generated and not completely accurate.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PackageCard {
    #[serde(rename = "categories")]
    pub categories: Vec<crate::models::PackageCategory>,
    #[serde(rename = "community_identifier")]
    pub community_identifier: String,
    #[serde(rename = "community_name")]
    pub community_name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "download_count")]
    pub download_count: u32,
    #[serde(rename = "image_src")]
    pub image_src: Option<String>,
    #[serde(rename = "is_deprecated")]
    pub is_deprecated: bool,
    #[serde(rename = "is_nsfw")]
    pub is_nsfw: bool,
    #[serde(rename = "is_pinned")]
    pub is_pinned: bool,
    #[serde(rename = "last_updated")]
    pub last_updated: String,
    #[serde(rename = "namespace")]
    pub namespace: String,
    #[serde(rename = "package_name")]
    pub package_name: String,
    #[serde(rename = "rating_score")]
    pub rating_score: u32,
    #[serde(rename = "team_name")]
    pub team_name: String,
}

impl PackageCard {
    pub fn new(categories: Vec<crate::models::PackageCategory>, community_identifier: String, community_name: String, description: String, download_count: u32, image_src: Option<String>, is_deprecated: bool, is_nsfw: bool, is_pinned: bool, last_updated: String, namespace: String, package_name: String, rating_score: u32, team_name: String) -> PackageCard {
        PackageCard {
            categories,
            community_identifier,
            community_name,
            description,
            download_count,
            image_src,
            is_deprecated,
            is_nsfw,
            is_pinned,
            last_updated,
            namespace,
            package_name,
            rating_score,
            team_name,
        }
    }
}


