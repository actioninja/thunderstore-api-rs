////////////////////////////////////////////////////////////////////////////////
// This Source Code Form is subject to the terms of the Mozilla Public         /
// License, v. 2.0. If a copy of the MPL was not distributed with this         /
// file, You can obtain one at https://mozilla.org/MPL/2.0/.                   /
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// This Source Code Form is subject to the terms of the Mozilla Public         /
// License, v. 2.0. If a copy of the MPL was not distributed with this         /
// file, You can obtain one at https://mozilla.org/MPL/2.0/.                   /
////////////////////////////////////////////////////////////////////////////////

/*
 * Thunderstore API
 *
 * Schema is automatically generated and not completely accurate.
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PackageSubmissionResult {
    #[serde(rename = "package_version")]
    pub package_version: Box<crate::models::PackageVersionExperimental>,
    #[serde(rename = "available_communities")]
    pub available_communities: Vec<crate::models::AvailableCommunity>,
}

impl PackageSubmissionResult {
    pub fn new(
        package_version: crate::models::PackageVersionExperimental,
        available_communities: Vec<crate::models::AvailableCommunity>,
    ) -> PackageSubmissionResult {
        PackageSubmissionResult {
            package_version: Box::new(package_version),
            available_communities,
        }
    }
}
